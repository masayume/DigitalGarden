/*
  synch online: 
 https://github.com/masayume/DigitalGarden/blob/main/engineering-code/unity/GAMEDEV.unity.code.techniques.infogen.txt 
 code git/DigitalGarden/engineering-code/unity/GAMEDEV.unity.code.techniques.infogen.txt
*/

/*  ============================================================================================
    [array][vector][direction][gameobject] code example from https://youtu.be/2yWY_hpb7B0?t=3854
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerDefeatEffect.cs script
    ============================================================================================
*/


    public float explosionSpeed = 0.75f;
    GameObject[] explosions = new GameObject[12];
    Vector3[] explosionVectors = {
        new Vector3(-1f, 0, 0),             // West - Full Speed
        new Vector3(1f, 0, 0),              // East - Full Speed
        new Vector3(0, -1f, 0),             // South - Full Speed
        new Vector3(0, 1f, 0),              // North - Full Speed
        new Vector3(-0.75f, -0.75f, 0),     // Southwest - Full Speed
        new Vector3(-0.75f, 0.75f, 0),      // Northwest - Full Speed
        new Vector3(0.75f, -0.75f, 0),      // Southeast - Full Speed
        new Vector3(0.75f, 0.75f, 0),       // Northeast - Full Speed
        new Vector3(-0.5f, 0, 0),           // West - Half Speed
        new Vector3(0.5f, 0, 0),            // East - Half Speed
        new Vector3(0, -0.5f, 0),           // South - Half Speed
        new Vector3(0, 0.5f, 0)             // North - Half Speed
    };


/*
    [string][loop][find][gameobject] code example from https://youtu.be/2yWY_hpb7B0?t=3954
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerDefeatEffect.cs script
*/
    // populate explosions array with child gameobjects
    for (int i = 0; i < explosions.Length; i++)
    {
        string explosionName = "Explosion" + (i + 1).ToString();
        explosions[i] = transform.Find(explosionName).gameObject;
    } 


/*  ============================================================================================
    [raycast][visualdebug][collider] with [ground] code example from https://youtu.be/ZanjE9en5k0?t=3700
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerController.cs script
    ============================================================================================
*/

    private void FixedUpdate() {
        isGrounded = false; // determine if touching the ground
        Color raycastColor;
        RaycastHit2D raycastHit;
        float raycastDistance = 0.05f;
        int layerMask = 1 << LayerMask.NameToLayer("Ground");
        // ground check
        Vector3 box_origin = box2d.bounds.center; 
        box_origin.y = box2d.bounds.min.y + (box2d.bounds.extents.y / 4f); 
        Vector3 box_size = box2d.bounds.size;
        box_size.y = box2d.bounds.size.y / 4f; // mini box unter the player
        // check if touching down layer
        raycastHit = Physics2D.BoxCast(box_origin, box_size, 0f, Vector2.down, raycastDistance, layerMask);
        if (raycastHit.collider != null)
        {
            isGrounded = true;
        }
        // raycast draw debug lines, visible in the Scene (green: touches; red: no touch)
        raycastColor = (isGrounded) ? Color.green : Color.red;
        Debug.DrawRay(box_origin + new Vector3(box2d.bounds.extents.x, 0), Vector2.down * (box2d.bounds.extents.y / 4f + raycastDistance), raycastColor);
        Debug.DrawRay(box_origin - new Vector3(box2d.bounds.extents.x, 0), Vector2.down * (box2d.bounds.extents.y / 4f + raycastDistance), raycastColor);
        Debug.DrawRay(box_origin - new Vector3(box2d.bounds.extents.x, box2d.bounds.extents.y / 4f + raycastDistance), Vector2.right * (box2d.bounds.extents.x * 2), raycastColor);

    }

/*  ============================================================================================
    [coroutines] code example from https://www.youtube.com/watch?v=K2NJuTA7-l4
    ============================================================================================
*/

public GameObject objectToSpawn;
public Transform spawnPoint;

Coroutine currentCoroutine = null;

[Range(0,5)]
public float waitTime = 0.5;

IEnumerator SpawnCoroutine()
{
	while (true)
	{
		Instantiate(objectToSpawn, spawnPoint.transform.position, Quaternion.identity);
		yield return new WaitForSeconds(waitTime); // wait for 1 secondo and then go on

	}
}

IEnumerator StopAfter(float timeToWait)
{
	yield return new WaitForSeconds(timeToWait); // wait for 1 secondo and then go on
	Debug.Log("Stopping the other routine");
	StopCoroutine(currentCoroutine);

}

void Start() 
{
	currentCoroutine = StartCoroutine(SpawnCoroutine());
	StartCoroutine(StopAfter(3.0f));

}



/*  ============================================================================================
    [animation][stop][frame][event] code example from https://youtu.be/mWKK4Rr3-OQ?t=4700
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerController.cs script;     

    Added ANIMATION EVENT in the animation editor at the second to last frame
    that calls the StopDamageAnimation() function in the PlayerController  
    ============================================================================================
*/

    void StopDamageAnimation()
    {
        isTakingDamage = false;
        isInvincible = false;
        animator.Play("Player_Hit", -1, 0f);

    }

/*  ============================================================================================
    [animation][bezier][enemy][math] code example from https://youtu.be/Xwj8_z9OrFw
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    UtilityFunctions.cs script
    ============================================================================================
*/

    public static Vector3 CalculateQuadraticBezierPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
    {
        // return = (1 - t)2 P0 + 2(1 - t)tP1 + t2P2
        //             u              u         tt
        //            uu * P0 + 2 * u * t * P1 + tt * P2
        float   u   = 1 - t;
        float   tt  = t * t;
        float   uu  = u * u;
        Vector3 p   = uu * p0;
        p           += 2 * u * t * p1;
        p           += tt * p2;
        return p;
    }

/*
    ***** [TITLE] code example from https://www.youtube.com/watch?v=VVVVVVVVVVVVV *****
    ============================================================================================
*/


