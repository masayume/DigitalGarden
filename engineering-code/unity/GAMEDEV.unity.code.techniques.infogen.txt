/*
  synch online: 
 https://github.com/masayume/DigitalGarden/blob/main/engineering-code/unity/GAMEDEV.unity.code.techniques.infogen.txt 
 code git/DigitalGarden/engineering-code/unity/GAMEDEV.unity.code.techniques.infogen.txt
*/

/*  ============================================================================================
    [array][vector][direction][gameobject] code example from https://youtu.be/2yWY_hpb7B0?t=3854
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerDefeatEffect.cs script
    ============================================================================================
*/


    public float explosionSpeed = 0.75f;
    GameObject[] explosions = new GameObject[12];
    Vector3[] explosionVectors = {
        new Vector3(-1f, 0, 0),             // West - Full Speed
        new Vector3(1f, 0, 0),              // East - Full Speed
        new Vector3(0, -1f, 0),             // South - Full Speed
        new Vector3(0, 1f, 0),              // North - Full Speed
        new Vector3(-0.75f, -0.75f, 0),     // Southwest - Full Speed
        new Vector3(-0.75f, 0.75f, 0),      // Northwest - Full Speed
        new Vector3(0.75f, -0.75f, 0),      // Southeast - Full Speed
        new Vector3(0.75f, 0.75f, 0),       // Northeast - Full Speed
        new Vector3(-0.5f, 0, 0),           // West - Half Speed
        new Vector3(0.5f, 0, 0),            // East - Half Speed
        new Vector3(0, -0.5f, 0),           // South - Half Speed
        new Vector3(0, 0.5f, 0)             // North - Half Speed
    };

/*  ============================================================================================
    [array][double][jump][pattern] code example from https://youtu.be/p4HSEXxzxKA?t=1800
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    BigEyeController.cs:20 script
    ============================================================================================
*/

    int[] jumpPattern;
    int[][] jumpPatterns = new int[][] {
        new int[1] { 1 },           // High Jump
        new int[2] { 0, 1 },        // Low Jump, High Jump
        new int[3] { 0, 0, 1 }      // Low Jump, Low Jump, High Jump
    };

/*  ============================================================================================
    [string][loop][find][gameobject] code example from https://youtu.be/2yWY_hpb7B0?t=3954
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerDefeatEffect.cs script
    ============================================================================================
*/

    // populate explosions array with child gameobjects
    for (int i = 0; i < explosions.Length; i++)
    {
        string explosionName = "Explosion" + (i + 1).ToString();
        explosions[i] = transform.Find(explosionName).gameObject;
    } 


/*  ============================================================================================
    [raycast][visualdebug][collider] with [ground] code example from https://youtu.be/ZanjE9en5k0?t=3700
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerController.cs script
    ============================================================================================
*/

    private void FixedUpdate() {
        isGrounded = false; // determine if touching the ground
        Color raycastColor;
        RaycastHit2D raycastHit;
        float raycastDistance = 0.05f;
        int layerMask = 1 << LayerMask.NameToLayer("Ground");
        // ground check
        Vector3 box_origin = box2d.bounds.center; 
        box_origin.y = box2d.bounds.min.y + (box2d.bounds.extents.y / 4f); 
        Vector3 box_size = box2d.bounds.size;
        box_size.y = box2d.bounds.size.y / 4f; // mini box unter the player
        // check if touching down layer
        raycastHit = Physics2D.BoxCast(box_origin, box_size, 0f, Vector2.down, raycastDistance, layerMask);
        if (raycastHit.collider != null)
        {
            isGrounded = true;
        }
        // raycast draw debug lines, visible in the Scene (green: touches; red: no touch)
        raycastColor = (isGrounded) ? Color.green : Color.red;
        Debug.DrawRay(box_origin + new Vector3(box2d.bounds.extents.x, 0), Vector2.down * (box2d.bounds.extents.y / 4f + raycastDistance), raycastColor);
        Debug.DrawRay(box_origin - new Vector3(box2d.bounds.extents.x, 0), Vector2.down * (box2d.bounds.extents.y / 4f + raycastDistance), raycastColor);
        Debug.DrawRay(box_origin - new Vector3(box2d.bounds.extents.x, box2d.bounds.extents.y / 4f + raycastDistance), Vector2.right * (box2d.bounds.extents.x * 2), raycastColor);

    }

/*  ============================================================================================
    [coroutines] code example from https://www.youtube.com/watch?v=K2NJuTA7-l4
    ============================================================================================
*/

public GameObject objectToSpawn;
public Transform spawnPoint;

Coroutine currentCoroutine = null;

[Range(0,5)]
public float waitTime = 0.5;

IEnumerator SpawnCoroutine()
{
	while (true)
	{
		Instantiate(objectToSpawn, spawnPoint.transform.position, Quaternion.identity);
		yield return new WaitForSeconds(waitTime); // wait for 1 secondo and then go on

	}
}

IEnumerator StopAfter(float timeToWait)
{
	yield return new WaitForSeconds(timeToWait); // wait for 1 secondo and then go on
	Debug.Log("Stopping the other routine");
	StopCoroutine(currentCoroutine);

}

void Start() 
{
	currentCoroutine = StartCoroutine(SpawnCoroutine());
	StartCoroutine(StopAfter(3.0f));

}



/*  ============================================================================================
    [animation][stop][frame][event] code example from https://youtu.be/mWKK4Rr3-OQ?t=4700
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    PlayerController.cs script;     

    Added ANIMATION EVENT in the animation editor at the second to last frame
    that calls the StopDamageAnimation() function in the PlayerController  
    ============================================================================================
*/

    void StopDamageAnimation()
    {
        isTakingDamage = false;
        isInvincible = false;
        animator.Play("Player_Hit", -1, 0f);

    }

/*  ============================================================================================
    [animation][bezier][enemy][math] code example from https://youtu.be/Xwj8_z9OrFw
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    UtilityFunctions.cs script
    ============================================================================================
*/

    public static Vector3 CalculateQuadraticBezierPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
    {
        // return = (1 - t)2 P0 + 2(1 - t)tP1 + t2P2
        //             u              u         tt
        //            uu * P0 + 2 * u * t * P1 + tt * P2
        float   u   = 1 - t;
        float   tt  = t * t;
        float   uu  = u * u;
        Vector3 p   = uu * p0;
        p           += 2 * u * t * p1;
        p           += tt * p2;
        return p;
    }

/*  ============================================================================================
    [create][enemy][checklist] code example from https://www.youtube.com/watch?v=7sJIuVru5Gk 
    ============================================================================================
*/

01 	- create new empty object "Enemy" in scene
02 	- reset transform position
03 	- create child empty object "HitBox"
04 	- set tag "Enemy"
05 	- set layer "Enemy" (the HitBox is unaffected (untagged,default))
06 	- drag EnemyController script (RequireComponent auto adds the components needed)
		Rigidbody2D, Sprite Renderer, BoxCollider2D, Animator 
07 	- make Rigidbody kinematic; continuous collision detection; Never sleep mode; lock z for 2D
08 	- put sprite in the sprite renderer; set order in layer (10)
09 	- reset box collider; copy component to HitBox; check isTrigger
10 	- create Animator ("enemyname"); create Animation ("enemy_action")
11 	- set animation state in animator (create state from (animation) selected clip)

/*  ============================================================================================
    [state][enemy][animation][checklist] code example from https://youtu.be/_3_zmku30hM?t=2855
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    MambuController.cs:90 script    
    ============================================================================================
*/

01  - animator.Play("state_animation")
02 	- rb2d.velocity = new Vector2(((isFacingRight) ? moveSpeed : -moveSpeed), rb2d.velocity.y); // manage movement
03 	- closedTimer -= Time.deltaTime; // update state timer
04 	- if (closedTimer < 0) { change state actions, reset new state timer, reset new action timer } 

01  - bool isTeleporting
02  - [SerializeField] float teleportSpeed = -10f;  
03  - [SerializeField] AudioClip teleportClip; 
04  - public enum TeleportState { Descending, Landed, Idle } 
05  - [SerializeField] TeleportState teleportState;  
06  - Update()
        if (isTeleporting)
        {
            switch (teleportState)
            {
                case TeleportState.Descending:
                    // force this to false so the jumped landed sound isn't played
                    isJumping = false;
                    if (isGrounded)
                    {
                        teleportState = TeleportState.Landed;
                    }
                    break;
                case TeleportState.Landed:
                    // events in the animation will be called
                    animator.speed = 1;
                    break;
                case TeleportState.Idle:
                    Teleport(false);
                    break;
            }
            return;
        }
...
    public void Teleport(bool teleport)
    {
        if (teleport)
        {
            isTeleporting = true;
            FreezeInput(true);
            animator.Play("Player_Teleport");
            animator.speed = 0;
            teleportState = TeleportState.Descending;
            rb2d.velocity = new Vector2(rb2d.velocity.x, teleportSpeed);
        }
        else
        {
            isTeleporting = false;
            FreezeInput(false);
        }
    }

Animation Override Controller [animator][override][controller][checklist] - https://youtu.be/SKHyh2fQWo8?t=718

00 	- Create Animator Controller ("ScrewDriver")
01 	- Create Animation(s) ("ScrewDriver_Closed", "ScrewDriver_Open")
02 	- Add Animation(s) to "ScrewDriver" Animator Controller (select animation -> Create State -> from Selected Clip )
03 	- Create Animation Override Controller ("ScrewDriver_Blue")
04 	- Create Animation(s) ("ScrewDriver_ClosedBlue", "ScrewDriver_OpenBlue")
05 	- Drag "ScrewDriver" AC in "ScrewDriver_Blue" Controller slot
06 	- Drag "ScrewDriver_ClosedBlue", "ScrewDriver_OpenBlue" animations into AOC animation slots
07 	- Set "Sample Rate" into animations "ScrewDriver_ClosedBlue", "ScrewDriver_OpenBlue" (1 if static, 12 if dynamic & set loop time)
08 	- Drag "ScrewDriver_Blue" AOC to Controller slot in Animator of prototype GameObject in Scene
09 	- with GO selected Drag sprite(s) to animation(s): "ScrewDriver_ClosedBlue", "ScrewDriver_OpenBlue"
10 	- press "Record" to Set Colliders for every frame (GO & HitBox); check with preview
11 	- add Events of Frames
12 	- Duplicate AOC "ScrewDriver_Blue" for more colors/variations ("ScrewDriver_Orange")
13 	- Duplicate AOC animation for corresponding color/variation ("ScrewDriver_ClosedOrange", "ScrewDriver_OpenOrange")
14 	- Drag "ScrewDriver_ClosedOrange", "ScrewDriver_OpenOrange" in AOC  ScrewDriver_Orange
15 	- Edit ScrewDriver_Orange dragging in GO Animator Controller slot
16 	- Edit frames and properties
17 	- Set main Screwdriver Animator Contoller in GO Animator Controller Slot (must be the main one, not a variant)
18 	- Set RAC Screwdriver Controllers in public reference for Blue and Orange (the variants go here)
19 	- Create ScrewDriver prefab dragging the GO in Prefabs folder.
00 	- TEXT


00 	- Create "main Animator"
02 	- Create Animation 
03 	- put "main animator" in Override Controller
04 	- put animation in Override Controller
05 	- turn on/keep off "loop time"
06 	- select gameobject; drag animator and THEN drag graphics in animation frames


/*  ============================================================================================
    [struct][bullet][type] code example from https://youtu.be/_3_zmku30hM?t=1257
    example featured in /home/masayume/DATA/E/UNITY.PROJECTS/2021-1-PLATFORM/MegamanTutorial/
    BulletScript.cs script    
    ============================================================================================
*/

    [SerializeField] float bulletSpeed;
    [SerializeField] Vector2 bulletDirection;
    [SerializeField] float destroyDelay;

    [SerializeField] string[] collideWithTags = { "Enemy" };

    public enum BulletTypes { Default, MiniBlue, MiniGreen, MiniOrange, MiniPink, MiniRed };
    [SerializeField] BulletTypes bulletType = BulletTypes.Default;

    [System.Serializable]
    public struct BulletStruct
    {
        public Sprite sprite;
        public float radius;
        public Vector3 scale;
    }
    [SerializeField] BulletStruct[] bulletData;

// ...

    private void OnTriggerEnter2D(Collider2D other)
    {
        foreach (string tag in collideWithTags)
        {
            // check for collision with this tag
            if (other.gameObject.CompareTag(tag))
            {
                switch (tag)
                {
                    case "Enemy":
                        // enemy controller will apply the damage player bullet can cause
                        EnemyController enemy = other.gameObject.GetComponent<EnemyController>();
                        if (enemy != null)
                        {
                            enemy.TakeDamage(this.damage);
                        }
                        break;
                    case "Player":
                        // player controller will apply the damage enemy bullet can cause
                        PlayerController player = other.gameObject.GetComponent<PlayerController>();
                        if (player != null)
                        {
                            player.HitSide(transform.position.x > player.transform.position.x);
                            player.TakeDamage(this.damage);
                        }
                        break;
                }
                // remove the bullet - just not immediately
                Destroy(gameObject, 0.01f);
            }
        }
    }

/*  ============================================================================================
    [random][probabilities] code example from https://youtu.be/ldQd7bx3Wis?t=3996
    GameManager.cs
    ============================================================================================
*/
        

    private ItemScript.ItemTypes PickRandomBonusItem()
    {
        float[] probabilities = {
            12, 53, 15, 15, 2, 2, 1, 12, 16
        };
        // sum of all probabilities
        float total = 0;

        // item types indexed to match probabilities
        ItemScript.ItemTypes[] items = {
            ItemScript.ItemTypes.Nothing,
            ItemScript.ItemTypes.BonusBall,
            ItemScript.ItemTypes.WeaponEnergySmall,
            ItemScript.ItemTypes.LifeEnergySmall,
            ItemScript.ItemTypes.WeaponEnergyBig,
            ItemScript.ItemTypes.LifeEnergyBig,
            ItemScript.ItemTypes.ExtraLife,
            ItemScript.ItemTypes.Nothing,
            ItemScript.ItemTypes.BonusBall
        };
        // add up all the probability values to get the total
        foreach (float prob in probabilities)
        {
            total += prob;
        }

        // pick a point in the total
        float randomPoint = UnityEngine.Random.value * total;

        // use the chosen index value to get the item type to return
        for (int i = 0; i < probabilities.Length; i++)
        {
            if (randomPoint < probabilities[i])
            {
                //return i;
                return items[i];
            }
            else
            {
                randomPoint -= probabilities[i];
            }
        }
        //return probabilities.Length - 1;
        return items[probabilities.Length - 1];
    }




/*  ============================================================================================
    [enum][random][runtimeAnimatorController] code example from https://youtu.be/ldQd7bx3Wis?t=3519
    ItemScript.cs
    ============================================================================================
*/

    public enum BonusBallColors { Random, Blue, Gray, Green, Orange, Red };
    [SerializeField] BonusBallColors bonusBallColor = BonusBallColors.Blue;
...
    public void SetBonusBallColor(BonusBallColors color)
    {
        if (itemType == ItemTypes.BonusBall)
        {
            bonusBallColor = color;
            SetBonusBallAnimatorController();
        }
    }

    void SetBonusBallAnimatorController()
    {
        // get bonus ball color
        BonusBallColors color = bonusBallColor;

        // if random pick a bonus ball color
        if (color == BonusBallColors.Random)
        {
            color = (BonusBallColors)UnityEngine.Random.Range(
                1, Enum.GetNames(typeof(BonusBallColors)).Length);
        }

        // set color animator controller
        switch (color)
        {
            case BonusBallColors.Blue:
                animator.runtimeAnimatorController = racBonusBallBlue;
                break;
...                



/*  ============================================================================================
    [collision][OnCollisionEnter2D][generate][event] code example from https://youtu.be/ldQd7bx3Wis?t=3808
    ItemScript.cs
    ============================================================================================
*/
     

    void OnCollisionEnter2D(Collision2D other)
    {
        if (other.gameObject.CompareTag("Player"))
        {
            PlayerController player = other.gameObject.GetComponent<PlayerController>();

            if (lifeEnergy > 0)
            {
                player.ApplyLifeEnergy(lifeEnergy);
            }

            if (weaponEnergy > 0)
            {
                player.ApplyWeaponEnergy(weaponEnergy);
            }

            if (bonusPoints > 0)
            {
                // call game manager to add bonus points
                GameManager.Instance.AddBonusPoints(bonusPoints);
            }

            // play item sound
            if (itemClip != null)
            {
                SoundManager.Instance.Play(itemClip);
            }

            // remove the item
            Destroy(gameObject);
        }
    }    



/*  ============================================================================================
    [GUI][EVENTS][COMPILE] code example from https://youtu.be/6mNIHsvc1mo 
    ============================================================================================
*/

1 - UI -> Canvas ("InputCanvas") - EventSystem
	Set Render Mode: 	Screen Space - Overlay 
	Set Sort Order: 	1
2 - Import from Asset Store: "Simple Input System" 
3 - Drag Prefab DpadMultiplePieces (Simple Input System asset) in "InputCanvas"
	Rename DpadMultiplePieces to "Gamepad" - Resize it
4 - Set Alpha: select all the prefab pieces; Set Color Alpha to 50
5 - Add Button to "InputCanvas"
	Set image, color, transparency, anchor, size
6 - PlayerController.cs -> Set keyHorizontal, keyVertical; define <functions> for buttons

7A - In the UUI set "On Click" <functions> to call
	"+" to add the PlayerController GameObject ("Player")
	select PlayerController function (MobileShootWrapper, MobilejumpWrapper)
7B - Add Event Trigger, add new event type (i.e. "Pointer Down") 
	"+" to add the PlayerController GameObject ("Player")
	select PlayerController function (MobileShootWrapper, MobilejumpWrapper)
7C - ButtonHandler.cs
	remove 7B and add script to Button
	"+" to add the PlayerController GameObject ("Player")
	select PlayerController function (MobileShootWrapper, MobilejumpWrapper)

/*  ============================================================================================
    [CAMERA][Scene][transition] code example from https://www.youtube.com/watch?v=l01M9aSzxs8?t=1360
    GameManager.cs
    ============================================================================================
*/

01 -    Move "Audio Listener" Component from CAMERA to the Sound Manager GO
02 -    Create Prefab folders: "Managers", "Players" and move GameManager, SoundManager in "Managers" folder and Player in "Players" folder
03 -    Rename Default Scene in "Scenes" to "Main Scene"
04 -    Create "Main Scene" empty GO; Create Scripts MainScene, TitleScreen; 
05 -    Create new scene in Scenes: "Title Screen", from "Main Camera": Remove "Audio Listener"; Clear Flags "Solid Color", Black; Size: 1.5  
06 -    Create new GO "Title Screen", Add Script TitleScreen; Add Empty GO with graphics for "Background", "Main Title"
07 -    Create new UI Canvas; Set "Canvas Scaler": Scale with Screen Size; Add "TitleText" TMP; (drop FONT in TMP Fonts & Materials)
08 -    Drag GameManager, SoundManager from the Prefabs into "Title Screen" Scene 
09 -    in GameManager.cs script add 
    bool startNextScene;
    enum GameStates { TitleScreen, MainScene };
    public GameState gameState = GameStates.TitleScreen;

    private void OnEnable()
    {
        SceneManager.sceneLoaded += OnSceneLoaded;
    }

    // called when the game is terminated
    private void OnDisable()
    {
        SceneManager.sceneLoaded -= OnSceneLoaded;
    }

    private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
    {
        // init functions for each scene / game state
        switch (gameState)
        {
            case GameStates.TitleScreen:
                StartTitleScreen();
                break;
            case GameStates.MainScene:
                StartMainScene();
                break;
        }
    }

    private void Update()
    {
        // game loop functions for each scene / game state
        switch (gameState)
        {
            case GameStates.TitleScreen:
                TitleScreenLoop();
                break;
            case GameStates.MainScene:
                MainSceneLoop();
                break;
        }
    }

    public void StartNextScene()
    {
        // flag to trigger starting the next scene
        // scenes call this function to tell the GameManager they're done
        startNextScene = true;
    }

    private void StartTitleScreen()
    {
        // add any init code here for title screen
    }

    private void TitleScreenLoop()
    {
        // scene change triggered by StartNextScene()
        if (startNextScene)
        {
            // can do other things here before loading the next scene
            startNextScene = false;
            gameState = GameStates.MainScene;
            SceneManager.LoadScene("Main Scene");
        }
    }
...


/*  ============================================================================================
    [CAMERA][EVENTS][transition] code example from https://www.youtube.com/watch?v=qTidxf4EJoU
    CameraTransition.cs
    ============================================================================================
*/

TransitionState.PreDelay:
    CallEventBeforePreDelay()
        TransitionEventCall.BothBeforeDelay:
            CallPreTransitionEvent();
        TransitionEventCall.OnEnterBeforeDelay:
            CallPreTransitionEvent();
        TransitionEventCall.OnExitBeforeDelay:
            CallPreTransitionEvent();

TransitionState.Transition:

TransitionState.PostDelay:
    CallEventBeforePostDelay()
        TransitionEventCall.BothBeforeDelay:
            CallPostTransitionEvent();
        TransitionEventCall.OnEnterBeforeDelay:
            CallPostTransitionEvent();
        TransitionEventCall.OnExitBeforeDelay:
            CallPostTransitionEvent();


/*  ============================================================================================
    [CINEMATIC][CUTSCENES][no-timeline] code example from https://www.youtube.com/watch?v=Gw9-O3KZHwEU
    CameraTransition.cs 
    ============================================================================================
*/

01 - text
02 - text
03 - text
04 - text
05 - text
06 - text
07 - text
08 - text
09 - text
10 - text





/*  ============================================================================================
    [PUBLISH][ANDROID][checklist] code example from https://www.youtube.com/watch?v=hMdSK5fZTX8
    ============================================================================================
*/




/*  ============================================================================================
    ***** [TITLE] code example from https://www.youtube.com/watch?v=VVVVVVVVVVVVV *****
    ============================================================================================
*/

/*  ============================================================================================
    ***** [TITLE] code example from https://www.youtube.com/watch?v=VVVVVVVVVVVVV *****
    ============================================================================================
*/

/*  ============================================================================================
    ***** [TITLE] code example from https://www.youtube.com/watch?v=VVVVVVVVVVVVV *****
    ============================================================================================
*/








